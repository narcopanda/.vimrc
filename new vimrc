set number
syntax on

call plug#begin()

	Plug 'scrooloose/nerdtree'
	Plug 'flazz/vim-colorschemes'
	Plug 'tpope/vim-fugitive'
	Plug 'airblade/vim-gitgutter'
	Plug 'bling/vim-airline'
	Plug 'matze/vim-move'
	Plug 'thaerkh/vim-workspace'
	Plug 'artur-shaik/vim-javacomplete2'
	Plug 'jiangmiao/auto-pairs'
	Plug 'airblade/vim-rooter'
	Plug 'Valloric/YouCompleteMe'
    Plug 'Yggdroot/indentLine'

call plug#end()

"NERDTree autoloader"
function! StartUp()
	if 0 == argc()
		NERDTree
	end
endfunction
autocmd VimEnter * call StartUp()

"NERDTree closer"
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

let g:ycm_global_ycm_extra_conf = "~/.vim/plugged/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py"



"color scheme"
colorscheme Monokai

"mouse movement"
"set mouse=a"

"Indent Guides auto launch"
"let g:indentLine_enabled = 1
let g:indentLine_char = 'â”†'
let g:indentLine_setColors = 0
"autosave function"
let g:workspace_autosave_always = 1

"java autocomplete function"
autocmd FileType java setlocal omnifunc=javacomplete#Complete

"nmap <F4> <Plug>(JavaComplete-Imports-AddSmart)"
"imap <F4> <Plug>(JavaComplete-Imports-AddSmart)"

"nmap <F5> <Plug>(JavaComplete-Imports-Add)"
"imap <F5> <Plug>(JavaComplete-Imports-Add)"

"nmap <F6> <Plug>(JavaComplete-Imports-AddMissing)"
"imap <F6> <Plug>(JavaComplete-Imports-AddMissing)"

"nmap <F7> <Plug>(JavaComplete-Imports-RemoveUnused)"
"imap <F7> <Plug>(JavaComplete-IMports-RemoveUnused)"



nmap <leader>jI <Plug>(JavaComplete-Imports-AddMissing)
nmap <leader>jR <Plug>(JavaComplete-Imports-RemoveUnused)
nmap <leader>ji <Plug>(JavaComplete-Imports-AddSmart)
nmap <leader>jii <Plug>(JavaComplete-Imports-Add)

imap <C-j>I <Plug>(JavaComplete-Imports-AddMissing)
imap <C-j>R <Plug>(JavaComplete-Imports-RemoveUnused)
imap <C-j>i <Plug>(JavaComplete-Imports-AddSmart)
imap <C-j>ii <Plug>(JavaComplete-Imports-Add)

nmap <leader>jM <Plug>(JavaComplete-Generate-AbstractMethods)
imap <C-j>jM <Plug>(JavaComplete-Generate-AbstractMethods)
nmap <leader>jA <Plug>(JavaComplete-Generate-Accessors)
nmap <leader>js <Plug>(JavaComplete-Generate-AccessorSetter)
nmap <leader>jg <Plug>(JavaComplete-Generate-AccessorGetter)
nmap <leader>ja <Plug>(JavaComplete-Generate-AccessorSetterGetter)
nmap <leader>jts <Plug>(JavaComplete-Generate-ToString)
nmap <leader>jeq <Plug>(JavaComplete-Generate-EqualsAndHashCode)
nmap <leader>jc <Plug>(JavaComplete-Generate-Constructor)
nmap <leader>jcc <Plug>(JavaComplete-Generate-DefaultConstructor)

imap <C-j>s <Plug>(JavaComplete-Generate-AccessorSetter)
imap <C-j>g <Plug>(JavaComplete-Generate-AccessorGetter)
imap <C-j>a <Plug>(JavaComplete-Generate-AccessorSetterGetter)

vmap <leader>js <Plug>(JavaComplete-Generate-AccessorSetter)
vmap <leader>jg <Plug>(JavaComplete-Generate-AccessorGetter)
vmap <leader>ja <Plug>(JavaComplete-Generate-AccessorSetterGetter)

nmap <silent> <buffer> <leader>jn <Plug>(JavaComplete-Generate-NewClass)
nmap <silent> <buffer> <leader>jN <Plug>(JavaComplete-Generate-ClassInFile)

"airline tab functions"
let g:airlinge#extensions#tabline#show_splits = 1

"check one time after 4s of inactivity in normal mode
set autoread
au CursorHold * checktime
